{"version":3,"sources":["app/initialize.js","app/snowflake-renderer.js"],"names":["require","Buffer","defaultOptions","name","arms","max_font","min_font","arm_length","font_family","font_weight","omitEmptyString","object","Object","fromEntries","entries","filter","value","document","addEventListener","params","queryString","parse","window","location","search","_","defaults","url","getElementById","innerText","JSON","stringify","omit","$","ajax","dataType","statusCode","link","createElement","rel","href","head","appendChild","error","xhr","ajaxOptions","thrownError","console","log","status","input","merge","buildSnowflake","fn","rotate","degrees","css","$target","options","remove","name_text","length","chars","t","char","substr","font_size","font_width","font_left","push","arm","map","join","primary_arm","append","i","new_arm","clone","attr","html","text_colour","background_colour"],"mappings":"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","file":"public/app.js","sourcesContent":["import $ from 'jquery';\nimport _ from 'lodash';\nimport buildSnowflake from 'snowflake-renderer';\nimport queryString from 'query-string';\nrequire('buffer').Buffer;\n\n\nconst defaultOptions = {\n  name: 'Your Name',\n  arms: 7,\n  max_font: 125,\n  min_font: 6,\n  arm_length: 256,\n  font_family: 'Pinyon Script',\n  font_weight: 450\n};\n\nconst omitEmptyString = (object) =>\n  Object.fromEntries(\n    Object.entries(object).filter(([, value]) => {\n      return value != \"\"\n    })\n  )\n\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const params = omitEmptyString(queryString.parse(window.location.search));\n\n  _.defaults(params, defaultOptions);\n\n  let url = `https://fonts.googleapis.com/css?family=${params.font_family}:wght@100;200;300;400;500;600;700;800&display=swap`\n\n  document.getElementById('config').innerText = JSON.stringify(_.omit(params, 'name'))\n\n  $.ajax({\n    url: url,\n    dataType: 'text',\n    statusCode: {\n      200: function () {\n        const link = document.createElement('link');\n        link.rel = 'stylesheet';\n        link.href = url;\n        document.head.appendChild(link);\n        document.getElementById('example').innerText = params.font_family\n      }\n    },\n    error: function (xhr, ajaxOptions, thrownError) {\n      console.log(xhr.status);\n      console.log(thrownError);\n      document.getElementById('example').innerText = \"Invalid font name - Using cursive as default\"\n    }\n  });\n\n\n  buildSnowflake($('#snowflake_holder'), params);\n\n  const input = document.getElementById('enter-name');\n  input.addEventListener(\"keyup\", () => {\n    _.merge(params, { name: input.value });\n    buildSnowflake($('#snowflake_holder'), params);\n  });\n\n});\n","import $ from 'jquery';\n\n$.fn.rotate = function (degrees) {\n    $(this).css({\n        '-webkit-transform': 'rotate(' + degrees + 'deg)',\n        '-moz-transform': 'rotate(' + degrees + 'deg)',\n        '-ms-transform': 'rotate(' + degrees + 'deg)',\n        'transform': 'rotate(' + degrees + 'deg)'\n    });\n    return $(this);\n};\n\n\nexport default function buildSnowflake($target, options) {\n\n    $('.arm').remove();\n\n    $('#snowflake_holder').css({\n        'font-family': options.font_family,\n        'font-weight': options.font_weight\n\n    });\n    $('#example').css({\n        'font-family': options.font_family,\n        'font-weight': options.font_weight\n    });\n    const name_text = options.name.length > 0 ? options.name : \"your name\";\n    const chars = [];\n\n    for (let t = 0; t < name_text.length; t++) {\n        const char = name_text.substr(t, 1);\n\n        // step between the max and min font sizes\n        const font_size = options.max_font - (((options.max_font - options.min_font) / name_text.length) * t);\n\n        // space the fonts over the 'branch'\n        const font_width = options.arm_length / name_text.length;\n\n        // distance on 'branch'\n        const font_left = (options.arm_length / name_text.length) * t;\n\n        chars.push({ char, font_size });\n\n    }\n\n    const arm = chars.map((char) => {\n        return `<div class=\"char\" style=\" font-size: ${char.font_size}px;\">${char.char}</div>`;\n    }).join('');\n\n    const primary_arm = `\n    <div class=\"arm rotate_pin\" id=\"arm_0\">\n        <div class=\"text_holder top\">\"${arm}</div>\n        <div class=\"text_holder bottom\">\"${arm}</div>\n    </div>\n    `;\n\n    $target.append(primary_arm);\n    $('#snowflake').append(primary_arm);\n\n    // already made arm 0, just clone it into the remaining arms\n    for (var i = 1; i < options.arms; i++) {\n        var new_arm = $('#arm_0').clone();\n        new_arm.attr('id', ' arm_' + i).rotate((360 / options.arms) * i);\n        $target.append(new_arm);\n        $('#snowflake').append(new_arm);\n    }\n\n    $('.poster_framed_1_snowflake').html($target.clone().attr(\"class\", \"snowflake_static_1\").attr(\"id\", \"\").css({ 'color': '#' + options.text_colour }));\n    $('.poster_framed_1_text').html(\"the snowflake of \" + options.name);\n    $('.mockup, .card_front').css({ 'background-color': '#' + options.background_colour });\n    $('.snowflake_static_1 div').css({ 'color': '#' + options.text_colour });\n    $('.poster_framed_1_text').css({ 'color': '#' + options.text_colour });\n\n    // Copy styles and content into the static snowflake builder page\n    $('#snowflake_maker #snowflake_holder div').css({ 'color': '#' + options.text_colour });\n    $('#name_text').html(\"the snowflake of \" + options.name).css({ 'color': '#' + options.text_colour });\n\n}\n"]}